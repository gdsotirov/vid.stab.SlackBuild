#!/bin/sh
#
# Slackware build script for vid.stab
# Copyright (C) 2016-2020 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=vid.stab
VERSION=1.1.0
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Get, backup and fix source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.?z* || exit 3
cd $SRC
fix_source

# Configure, build and install
mkdir build; cd build
cmake -LAH \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_C_FLAGS="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS="${SLKCFLAGS}" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DCMAKE_VERBOSE_MAKEFILE=TRUE \
      .. || exit 5
make VERBOSE=1 -j || exit 6
make DESTDIR=$PKG install || exit 7
cd ..

# Build and install Transcode filters
mkdir transcode/build; cd transcode/build
cmake -LAH \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_CXX_FLAGS="${SLKCFLAGS} -I/usr/include/transcode" \
      -DCMAKE_C_FLAGS="${SLKCFLAGS} -I/usr/include/transcode" \
      -DCMAKE_INSTALL_PREFIX="/usr" \
      .. || exit 51

make VERBOSE=1 -j || exit 61
TRANSCODE_FLTRS_DIR=$PKG/usr/lib${LIBDIRSUFFIX}/transcode
mkdir -p $TRANSCODE_FLTRS_DIR
install -m 755 filter_deshake.so   $TRANSCODE_FLTRS_DIR/filter_deshake.so   || exit 71
install -m 755 filter_stabilize.so $TRANSCODE_FLTRS_DIR/filter_stabilize.so || exit 72
install -m 755 filter_transform.so $TRANSCODE_FLTRS_DIR/filter_transform.so || exit 73
cd ../..

# Prepare
( cd $PKG; strip_lib )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
( cd $PKG/usr/doc/${NAME}-${VERSION}; mv LICENSE COPYING )

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $SBDIR
install -m 644 $CWD/slack-desc         $SBDIR/slack-desc
install -m 644 $CWD/slack-required     $SBDIR/slack-required
install -m 644 $CWD/slack-suggests     $SBDIR/slack-suggests
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Assemble
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

